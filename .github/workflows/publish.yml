name: Publish to NPM

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (patch, minor, major, or specific version like 1.2.3)'
        required: false
        type: string
        default: 'patch'
      dry_run:
        description: 'Dry run (do not actually publish)'
        required: false
        type: boolean
        default: false

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      # - name: Run tests
      #   run: npm run test

      - name: Build project
        run: npm run build

      - name: Check build artifacts
        run: |
          if [ ! -f "lib/index.js" ] || [ ! -f "lib/index.d.ts" ]; then
            echo "Build artifacts missing!"
            exit 1
          fi

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && !inputs.dry_run)
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'npm'

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Get current version
        id: current-version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Update version (manual trigger)
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.version != ''
        run: |
          if [[ "${{ github.event.inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            npm version ${{ github.event.inputs.version }} --no-git-tag-version
          else
            npm version ${{ github.event.inputs.version }}
          fi

      - name: Get new version
        id: new-version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Check if version changed
        id: version-check
        run: |
          if [ "${{ steps.current-version.outputs.version }}" != "${{ steps.new-version.outputs.version }}" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit version change
        if: steps.version-check.outputs.changed == 'true' && github.event_name == 'workflow_dispatch'
        run: |
          git add package.json
          git commit -m "chore: bump version to ${{ steps.new-version.outputs.version }}"
          git push

      - name: Create git tag
        if: steps.version-check.outputs.changed == 'true' && github.event_name == 'workflow_dispatch'
        run: |
          git tag v${{ steps.new-version.outputs.version }}
          git push origin v${{ steps.new-version.outputs.version }}

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub release (if manual trigger)
        if: github.event_name == 'workflow_dispatch' && steps.version-check.outputs.changed == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.new-version.outputs.version }}
          release_name: Release v${{ steps.new-version.outputs.version }}
          body: |
            ## Changes
            Released version ${{ steps.new-version.outputs.version }}

            See [CHANGELOG.md](CHANGELOG.md) for detailed changes.
          draft: false
          prerelease: false

  dry-run:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && inputs.dry_run
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Dry run publish
        run: npm publish --dry-run
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Show what would be published
        run: npm pack --dry-run
